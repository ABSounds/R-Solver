// This scattering matrix was derived using the R-Solver python script (https://github.com/jatinchowdhury18/R-Solver),
// invoked with command: r_solver.py --datum 0 --adapt 3 --out mxr_scatt.txt netlists/mxr_distplus_vcvs.txt
const auto S_matrix[4][4] = {{                     -(Ra*Ra*Rb*Rb + 2*Ra*Ra*Rb*Rc + (Ra*Ra - Rb*Rb)*Rc*Rc - ((A + 1)*Rc*Rc - Ra*Ra)*Ri*Ri - ((A + 2)*Rb*Rc*Rc - 2*Ra*Ra*Rb - 2*Ra*Ra*Rc)*Ri + (Rb*Rb*Rc + Rb*Rc*Rc + Rc*Ri*Ri + (2*Rb*Rc + Rc*Rc)*Ri)*Ro)/(Ra*Ra*Rb*Rb + (Ra*Ra + 2*Ra*Rb + Rb*Rb)*Rc*Rc + ((A + 2)*Ra*Rc + (A + 1)*Rc*Rc + Ra*Ra)*Ri*Ri + 2*(Ra*Ra*Rb + Ra*Rb*Rb)*Rc + (2*Ra*Ra*Rb + ((A + 2)*Ra + (A + 2)*Rb)*Rc*Rc + ((A + 4)*Ra*Rb + 2*Ra*Ra)*Rc)*Ri - (Ra*Rb*Rb + (Ra + Rb)*Rc*Rc + (Ra + Rc)*Ri*Ri + (2*Ra*Rb + Rb*Rb)*Rc + (2*Ra*Rb + 2*(Ra + Rb)*Rc + Rc*Rc)*Ri)*Ro),                                    -(2*Ra*Ra*Rb*Rc + 2*(Ra*Ra + Ra*Rb)*Rc*Rc - (A*Ra*Ra + A*Ra*Rc)*Ri*Ri - (A*Ra*Ra*Rb - (A + 2)*Ra*Rc*Rc + ((A - 2)*Ra*Ra + A*Ra*Rb)*Rc)*Ri - (Ra*Rb*Rc + Ra*Rc*Rc + Ra*Rc*Ri)*Ro)/(Ra*Ra*Rb*Rb + (Ra*Ra + 2*Ra*Rb + Rb*Rb)*Rc*Rc + ((A + 2)*Ra*Rc + (A + 1)*Rc*Rc + Ra*Ra)*Ri*Ri + 2*(Ra*Ra*Rb + Ra*Rb*Rb)*Rc + (2*Ra*Ra*Rb + ((A + 2)*Ra + (A + 2)*Rb)*Rc*Rc + ((A + 4)*Ra*Rb + 2*Ra*Ra)*Rc)*Ri - (Ra*Rb*Rb + (Ra + Rb)*Rc*Rc + (Ra + Rc)*Ri*Ri + (2*Ra*Rb + Rb*Rb)*Rc + (2*Ra*Rb + 2*(Ra + Rb)*Rc + Rc*Rc)*Ri)*Ro),  -(2*Ra*Ra*Rb*Rb + ((A + 2)*Ra*Ra + 2*(A + 1)*Ra*Rc)*Ri*Ri + 2*(Ra*Ra*Rb + Ra*Rb*Rb)*Rc + ((A + 4)*Ra*Ra*Rb + ((A + 2)*Ra*Ra + 2*(A + 2)*Ra*Rb)*Rc)*Ri - (Ra*Rb*Rb + Ra*Rb*Rc + Ra*Ri*Ri + (2*Ra*Rb + Ra*Rc)*Ri)*Ro)/(Ra*Ra*Rb*Rb + (Ra*Ra + 2*Ra*Rb + Rb*Rb)*Rc*Rc + ((A + 2)*Ra*Rc + (A + 1)*Rc*Rc + Ra*Ra)*Ri*Ri + 2*(Ra*Ra*Rb + Ra*Rb*Rb)*Rc + (2*Ra*Ra*Rb + ((A + 2)*Ra + (A + 2)*Rb)*Rc*Rc + ((A + 4)*Ra*Rb + 2*Ra*Ra)*Rc)*Ri - (Ra*Rb*Rb + (Ra + Rb)*Rc*Rc + (Ra + Rc)*Ri*Ri + (2*Ra*Rb + Rb*Rb)*Rc + (2*Ra*Rb + 2*(Ra + Rb)*Rc + Rc*Rc)*Ri)*Ro),                                                                                                                                                                                                                                                                                                                                                                                                                                                               (Ra*Rb + Ra*Rc + Ra*Ri)/(Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Ri)},
                             {                                                                                           -(2*Ra*Rb*Rb*Rc + 2*(Ra*Rb + Rb*Rb)*Rc*Rc + ((A + 2)*Rb*Rc*Rc + 2*Ra*Rb*Rc)*Ri - (Rb*Rb*Rc + Rb*Rc*Rc + Rb*Rc*Ri)*Ro)/(Ra*Ra*Rb*Rb + (Ra*Ra + 2*Ra*Rb + Rb*Rb)*Rc*Rc + ((A + 2)*Ra*Rc + (A + 1)*Rc*Rc + Ra*Ra)*Ri*Ri + 2*(Ra*Ra*Rb + Ra*Rb*Rb)*Rc + (2*Ra*Ra*Rb + ((A + 2)*Ra + (A + 2)*Rb)*Rc*Rc + ((A + 4)*Ra*Rb + 2*Ra*Ra)*Rc)*Ri - (Ra*Rb*Rb + (Ra + Rb)*Rc*Rc + (Ra + Rc)*Ri*Ri + (2*Ra*Rb + Rb*Rb)*Rc + (2*Ra*Rb + 2*(Ra + Rb)*Rc + Rc*Rc)*Ri)*Ro), -(Ra*Ra*Rb*Rb + 2*Ra*Rb*Rb*Rc - (Ra*Ra - Rb*Rb)*Rc*Rc - ((A + 2)*Ra*Rc + (A + 1)*Rc*Rc + Ra*Ra)*Ri*Ri - ((A + 2)*Ra*Rc*Rc + 2*Ra*Ra*Rc)*Ri - (Ra*Rb*Rb + Rb*Rb*Rc - Ra*Rc*Rc - (Ra + Rc)*Ri*Ri - (2*Ra*Rc + Rc*Rc)*Ri)*Ro)/(Ra*Ra*Rb*Rb + (Ra*Ra + 2*Ra*Rb + Rb*Rb)*Rc*Rc + ((A + 2)*Ra*Rc + (A + 1)*Rc*Rc + Ra*Ra)*Ri*Ri + 2*(Ra*Ra*Rb + Ra*Rb*Rb)*Rc + (2*Ra*Ra*Rb + ((A + 2)*Ra + (A + 2)*Rb)*Rc*Rc + ((A + 4)*Ra*Rb + 2*Ra*Ra)*Rc)*Ri - (Ra*Rb*Rb + (Ra + Rb)*Rc*Rc + (Ra + Rc)*Ri*Ri + (2*Ra*Rb + Rb*Rb)*Rc + (2*Ra*Rb + 2*(Ra + Rb)*Rc + Rc*Rc)*Ri)*Ro),                                                                 (2*Ra*Ra*Rb*Rb + 2*(Ra*Ra*Rb + Ra*Rb*Rb)*Rc + ((A + 2)*Ra*Rb*Rc + 2*Ra*Ra*Rb)*Ri - (2*Ra*Rb*Rb + (2*Ra*Rb + Rb*Rb)*Rc + (2*Ra*Rb + Rb*Rc)*Ri)*Ro)/(Ra*Ra*Rb*Rb + (Ra*Ra + 2*Ra*Rb + Rb*Rb)*Rc*Rc + ((A + 2)*Ra*Rc + (A + 1)*Rc*Rc + Ra*Ra)*Ri*Ri + 2*(Ra*Ra*Rb + Ra*Rb*Rb)*Rc + (2*Ra*Ra*Rb + ((A + 2)*Ra + (A + 2)*Rb)*Rc*Rc + ((A + 4)*Ra*Rb + 2*Ra*Ra)*Rc)*Ri - (Ra*Rb*Rb + (Ra + Rb)*Rc*Rc + (Ra + Rc)*Ri*Ri + (2*Ra*Rb + Rb*Rb)*Rc + (2*Ra*Rb + 2*(Ra + Rb)*Rc + Rc*Rc)*Ri)*Ro),                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 Rb*Rc/(Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Ri)},
                             {                             -(2*Ra*Rb*Rb*Rc + 2*(Ra*Rb + Rb*Rb)*Rc*Rc + ((A + 2)*Rc*Rc + 2*Ra*Rc)*Ri*Ri + (4*Ra*Rb*Rc + ((A + 4)*Rb + 2*Ra)*Rc*Rc)*Ri - (Rb*Rb*Rc + Rb*Rc*Rc + Rc*Ri*Ri + (2*Rb*Rc + Rc*Rc)*Ri)*Ro)/(Ra*Ra*Rb*Rb + (Ra*Ra + 2*Ra*Rb + Rb*Rb)*Rc*Rc + ((A + 2)*Ra*Rc + (A + 1)*Rc*Rc + Ra*Ra)*Ri*Ri + 2*(Ra*Ra*Rb + Ra*Rb*Rb)*Rc + (2*Ra*Ra*Rb + ((A + 2)*Ra + (A + 2)*Rb)*Rc*Rc + ((A + 4)*Ra*Rb + 2*Ra*Ra)*Rc)*Ri - (Ra*Rb*Rb + (Ra + Rb)*Rc*Rc + (Ra + Rc)*Ri*Ri + (2*Ra*Rb + Rb*Rb)*Rc + (2*Ra*Rb + 2*(Ra + Rb)*Rc + Rc*Rc)*Ri)*Ro),                      (2*Ra*Ra*Rb*Rc + 2*(Ra*Ra + Ra*Rb)*Rc*Rc + (A*Ra*Rc + A*Rc*Rc)*Ri*Ri + ((2*(A + 1)*Ra + A*Rb)*Rc*Rc + (A*Ra*Rb + 2*Ra*Ra)*Rc)*Ri - (2*Ra*Rb*Rc + (2*Ra + Rb)*Rc*Rc + (2*Ra*Rc + Rc*Rc)*Ri)*Ro)/(Ra*Ra*Rb*Rb + (Ra*Ra + 2*Ra*Rb + Rb*Rb)*Rc*Rc + ((A + 2)*Ra*Rc + (A + 1)*Rc*Rc + Ra*Ra)*Ri*Ri + 2*(Ra*Ra*Rb + Ra*Rb*Rb)*Rc + (2*Ra*Ra*Rb + ((A + 2)*Ra + (A + 2)*Rb)*Rc*Rc + ((A + 4)*Ra*Rb + 2*Ra*Ra)*Rc)*Ri - (Ra*Rb*Rb + (Ra + Rb)*Rc*Rc + (Ra + Rc)*Ri*Ri + (2*Ra*Rb + Rb*Rb)*Rc + (2*Ra*Rb + 2*(Ra + Rb)*Rc + Rc*Rc)*Ri)*Ro),                  (Ra*Ra*Rb*Rb - (Ra*Ra + 2*Ra*Rb + Rb*Rb)*Rc*Rc - ((A + 1)*Rc*Rc - Ra*Ra)*Ri*Ri + (2*Ra*Ra*Rb - ((A + 2)*Ra + (A + 2)*Rb)*Rc*Rc)*Ri - (Ra*Rb*Rb - (Ra + Rb)*Rc*Rc + Ra*Ri*Ri + (2*Ra*Rb - Rc*Rc)*Ri)*Ro)/(Ra*Ra*Rb*Rb + (Ra*Ra + 2*Ra*Rb + Rb*Rb)*Rc*Rc + ((A + 2)*Ra*Rc + (A + 1)*Rc*Rc + Ra*Ra)*Ri*Ri + 2*(Ra*Ra*Rb + Ra*Rb*Rb)*Rc + (2*Ra*Ra*Rb + ((A + 2)*Ra + (A + 2)*Rb)*Rc*Rc + ((A + 4)*Ra*Rb + 2*Ra*Ra)*Rc)*Ri - (Ra*Rb*Rb + (Ra + Rb)*Rc*Rc + (Ra + Rc)*Ri*Ri + (2*Ra*Rb + Rb*Rb)*Rc + (2*Ra*Rb + 2*(Ra + Rb)*Rc + Rc*Rc)*Ri)*Ro),                                                                                                                                                                                                                                                                                                                                                                                                                                                                       (Rb*Rc + Rc*Ri)/(Ra*Rb + (Ra + Rb)*Rc + (Ra + Rc)*Ri)},
                             {                                                                                                                                                                                                                                                                                                                                                                                                                            (A*Rc*Ri - (Rb + Rc + Ri)*Ro)/(Ra*Rb + (Ra + Rb)*Rc + ((A + 1)*Rc + Ra)*Ri - (Rb + Rc + Ri)*Ro),                                                                                                                                                                                                                                                                                                                                                                                                                                ((A*Ra + A*Rc)*Ri - Rc*Ro)/(Ra*Rb + (Ra + Rb)*Rc + ((A + 1)*Rc + Ra)*Ri - (Rb + Rc + Ri)*Ro),                                                                                                                                                                                                                                                                                                                                                                                                                                 -(A*Ra*Ri + (Rb + Ri)*Ro)/(Ra*Rb + (Ra + Rb)*Rc + ((A + 1)*Rc + Ra)*Ri - (Rb + Rc + Ri)*Ro}};